services:
  postgres:
    image: postgres:17
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - eventhub-network

  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      args:
        API_PORT: ${API_PORT:-3001}
    container_name: eventhub-app-api
    env_file: .env
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
    networks:
      - eventhub-network
    depends_on:
      - postgres

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile.dev
    container_name: eventhub-app-web-dev
    ports:
      - "3000:3000"
    volumes:
      - ./apps/web/src:/app/apps/web/src
      - ./apps/web/public:/app/apps/web/public
      - ./apps/web/index.html:/app/apps/web/index.html
      - ./apps/web/vite.config.ts:/app/apps/web/vite.config.ts
      - ./apps/web/tailwind.config.ts:/app/apps/web/tailwind.config.ts
      - ./packages:/app/packages
    environment:
      - NODE_ENV=development
    networks:
      - eventhub-network
    depends_on:
      - api

volumes:
  postgres_data:

networks:
  eventhub-network:
    driver: bridge
